apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cas-reporting.fullname" . }}-backend
  labels:
    component: backend
{{- include "cas-reporting.labels" . | nindent 4 }}
spec:
{{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
{{- end }}
  selector:
    matchLabels:
{{- include "cas-reporting.selectorLabels" . | nindent 6 }}
      component: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
{{- include "cas-reporting.selectorLabels" . | nindent 8 }}
        component: backend
    spec:
      containers:
        - name: {{ .Release.Name }}-backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.defaultImageTag | default .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: django-secret-key
                  name: {{ .Release.Name }}-backend
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: {{ .Values.database.secret }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Values.database.secret }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: {{ .Values.database.secret }}
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: {{ .Values.database.secret }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ .Values.database.secret }}
            - name: ALLOWED_HOSTS
              value: '*'
            - name: ENVIRONMENT
              value: {{ .Values.backend.environment }}
          ports:
            - containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000
            # we want the readiness threshold to fail fast,
            # to prevent any request from going to a pod that is not ready
            failureThreshold: 1
            successThreshold: 1
            periodSeconds: 30
            timeoutSeconds: 5
            initialDelaySeconds: 120
          livenessProbe:
            # the liveness probe is here to ensure that a pod does not get
            # stuck in a shutdown state. It needs to allow enough time for
            # the registered shutdown handler to run to completion.
            httpGet:
              path: /liveness
              port: 8000
            initialDelaySeconds: 150
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources: {{ toYaml .Values.backend.resources | nindent 12 }}
      restartPolicy: Always
